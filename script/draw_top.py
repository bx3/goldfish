#!/usr/bin/env python
import networkx as nx
import matplotlib.pyplot as plt
import numpy as np

def read_weight(num_node, ld_file):
    ld = np.zeros((num_node, num_node))
    i = 0
    with open(ld_file) as f:
        for line in f:
            tokens = line.split()
            for j, t in enumerate(tokens):
                ld[i,j] = t
            i += 1
    return ld

outs_conns = {5: [2, 13, 18], 2: [12, 21, 17], 10: [19, 15, 20], 19: [17, 4, 2], 12: [14, 6, 8], 18: [2, 19, 9], 3: [4, 11, 20], 4: [12, 16, 8], 15: [5, 9, 11], 20: [6, 13, 15], 6: [2, 5, 3], 14: [17, 8, 5], 11: [20, 14, 7], 9: [12, 3, 4], 17: [4, 8, 7], 16: [8, 7, 3], 8: [1, 15, 7], 21: [15, 18, 19], 1: [13, 15, 16], 13: [16, 4, 3], 7: [15, 20, 18]}

#{2: [27, 1, 9], 27: [26, 7, 3], 24: [6, 9, 28], 6: [12, 2, 19], 16: [24, 8, 5], 19: [18, 20, 2], 18: [3, 24, 14], 29: [21, 12, 20], 21: [9, 2, 5], 28: [7, 25, 6], 7: [15, 29, 6], 3: [2, 19, 21], 5: [1, 11, 15], 1: [10, 9, 13], 17: [8, 6, 2], 8: [5, 10, 9], 13: [10, 6, 18], 10: [30, 9, 2], 15: [11, 8, 9], 9: [18, 25, 17], 23: [5, 3, 8], 12: [2, 11, 13], 26: [15, 6, 5], 11: [4, 7, 25], 4: [21, 10, 20], 20: [15, 5, 7], 14: [12, 26, 23], 30: [13, 27, 18], 25: [10, 6, 22], 22: [16, 26, 17]}

#{5: [2, 13, 18], 2: [12, 21, 17], 10: [19, 15, 20], 19: [17, 4, 2], 12: [14, 6, 8], 18: [2, 19, 9], 3: [4, 11, 20], 4: [12, 16, 8], 15: [5, 9, 11], 20: [6, 13, 15], 6: [2, 5, 3], 14: [17, 8, 5], 11: [20, 14, 7], 9: [12, 3, 4], 17: [4, 8, 7], 16: [8, 7, 3], 8: [1, 15, 7], 21: [15, 18, 19], 1: [13, 15, 16], 13: [16, 4, 3], 7: [15, 20, 18]}
weight = read_weight(1+len(outs_conns), "../inputs/rand_nodes22_length_250.txt")

#{1: [5, 6, 9], 9: [8, 10, 12], 2: [5, 3, 1], 3: [4, 6, 13], 13: [15, 17, 10], 4: [2, 1, 3], 5: [3, 2, 1], 6: [3, 5, 11], 11: [9, 12, 5], 7: [8, 11, 14], 14: [15, 16, 18], 8: [7, 11, 10], 10: [11, 8, 9], 12: [10, 7, 2], 15: [16, 18, 3], 16: [15, 18, 4], 17: [16, 15, 18], 18: [14, 13, 8]}

G = nx.Graph()
for i, conns in outs_conns.items():
    for j in conns:
        G.add_edge(i, j, lat = weight[i,j])
pos = nx.kamada_kawai_layout(G)
nx.draw(G, pos=pos, with_labels=True) # 
edge_labels = nx.get_edge_attributes(G,'lat')
nx.draw_networkx_edge_labels(G,pos,edge_labels=edge_labels)
plt.savefig('topo.png')


